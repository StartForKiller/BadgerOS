name: Code Check

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  validate-format:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Fetch submodules
        run: git submodule update --init --recursive

      - name: Install clang-tidy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang-format-18

      - name: Fetch & install RISC-V GNU Compiler Toolchain
        run: |
          curl -Lo riscv32-glibc-ubuntu-22.04-nightly.tar.gz 'https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2023.06.09/riscv32-glibc-ubuntu-22.04-nightly-2023.06.09-nightly.tar.gz'
          tar -xf riscv32-glibc-ubuntu-22.04-nightly.tar.gz
          echo "${PWD}/riscv/bin" >> $GITHUB_PATH

      - name: Build
        run: CMAKE_BUILD_TYPE=Debug make clean build

      - name: Run clang-format
        run: |
          echo "scan the following files:"
          jq -r '.[].file' build/compile_commands.json | grep '\.[ch]$'
          echo "analysis results:"
          clang-format-18 --dry-run $(jq -r '.[].file' build/compile_commands.json | grep '\.[ch]$')


  static-analysis:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Fetch submodules
        run: git submodule update --init --recursive

      - name: Install clang-tidy
        run: |
          sudo apt-get update -y

          # see https://apt.llvm.org/
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18

          sudo apt-get install -y clang-tidy-18

      - name: Fetch & install RISC-V GNU Compiler Toolchain
        run: |
          curl -Lo riscv32-glibc-ubuntu-22.04-nightly.tar.gz 'https://github.com/riscv-collab/riscv-gnu-toolchain/releases/download/2023.06.09/riscv32-glibc-ubuntu-22.04-nightly-2023.06.09-nightly.tar.gz'
          tar -xf riscv32-glibc-ubuntu-22.04-nightly.tar.gz
          echo "${PWD}/riscv/bin" >> $GITHUB_PATH

      - name: Build
        run: CMAKE_BUILD_TYPE=Debug make clean build

      - name: Run clang-tidy
        run: |
          echo "scan the following files:"
          jq -r '.[].file' build/compile_commands.json | grep '\.[ch]$'
          echo "analysis results:"
          clang-tidy-18 -p build $(jq -r '.[].file' build/compile_commands.json | grep '\.[ch]$') --warnings-as-errors="*"
